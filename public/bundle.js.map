{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/abstract-component.js","webpack:///./src/components/abstract-smart-component.js","webpack:///./src/components/comment.js","webpack:///./src/components/extra-films-list.js","webpack:///./src/components/film-card.js","webpack:///./src/components/film-details.js","webpack:///./src/components/films-list.js","webpack:///./src/components/films-section.js","webpack:///./src/components/no-films.js","webpack:///./src/components/profile.js","webpack:///./src/components/show-more-button.js","webpack:///./src/components/site-menu.js","webpack:///./src/components/sort.js","webpack:///./src/components/statistics.js","webpack:///./src/controllers/movie-controller.js","webpack:///./src/controllers/page-controller.js","webpack:///./src/main.js","webpack:///./src/mock/film-card.js","webpack:///./src/utils/common.js","webpack:///./src/utils/const.js","webpack:///./src/utils/render.js"],"names":[],"mappings":"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CA;AACA;AACA;AACA;AACA;AACA,mDAAmD,oBAAoB;AACvE;AACA;;AAEA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA,yHAAyH,YAAY;AACrI;;AAEA,qHAAqH,UAAU;AAC/H;;AAEA,uHAAuH,WAAW;AAClI;AACA;AACA;;AAEA;AACA;AACA,2GAA2G,gBAAgB;;AAE3H;AACA,gBAAgB;AAChB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,0BAA0B,oEAAsB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4BAA4B,mDAAO;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1LA;AAAA;AAAA;AAAqD;;AAErD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEe,wBAAwB,2DAAiB;AACxD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACtBA;AAAA;AAAA;AAAqD;;AAErD;AACA;AACA;AACA;AACA;;AAEe,2BAA2B,2DAAiB;AAC3D;AACA;AACA;AACA;;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAwD;;AAExD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,sBAAsB,8DAAiB;AACtD;AACA;AACA;AACA;;;;;;;;;;;;;AChBA;AAAA;AAAA;AAAqD;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,cAAc;AACjD;AACA;AACA;AACA;;AAEe,sBAAsB,2DAAiB;AACtD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AClCA;AAAA;AAAA;AAAqD;;AAErD;AACA;AACA;AACA;AACA;;AAEe,6BAA6B,2DAAiB;AAC7D;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AChBA;AAAA;AAAA;AAAqD;;AAErD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iHAAiH,eAAe;AAChI,6GAA6G,aAAa;AAC1H,iHAAiH,cAAc;AAC/H;AACA;AACA;AACA;AACA;;AAEe,mBAAmB,2DAAiB;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC7BA;AAAA;AAAA;AAAA;AAAqD;;AAE9C;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wCAAwC,iBAAiB;AACzD,wCAAwC,cAAc;AACtD,wCAAwC,gBAAgB;AACxD;AACA;AACA;;AAEe,mBAAmB,2DAAiB;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;AClDA;AAAA;AAAA;AAAqD;;AAErD;AACA;;AAEA;AACA,UAAU,WAAW;AACrB;AACA;;AAEe,yBAAyB,2DAAiB;AACzD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwE;AAChB;AACM;AAClB;;AAErC;AACP;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,kCAAkC,6DAAiB;AACnD,qCAAqC,gEAAoB;;AAEzD;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,qDAAqD;AACrD;AACA,OAAO;AACP,KAAK;;AAEL;AACA,qDAAqD;AACrD;AACA,OAAO;AACP,KAAK;;AAEL;AACA,qDAAqD;AACrD;AACA,OAAO;AACP,KAAK;;AAEL;AACA,MAAM,4DAA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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.js\");\n","import {createElement} from '../utils/render';\n\nexport default class AbstractComponent {\n  constructor() {\n    if (new.target === AbstractComponent) {\n      throw new Error(`Can't instantiate AbstractComponent, only concrete one.`);\n    }\n    this._element = null;\n  }\n\n  getTemplate() {\n    throw new Error(`Abstract method not implemented: getTemplate`);\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createElement(this.getTemplate(this._comment));\n    }\n\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n}\n","import AbstractComponent from './abstract-component';\n\nexport default class AbstractSmartComponent extends AbstractComponent {\n  recoveryListeners() {\n    throw new Error(`Abstract method not implemented: recoveryListeners`);\n  }\n\n  rerender() {\n    const oldElement = this.getElement();\n    const parent = oldElement.parentElement;\n\n    this.removeElement();\n\n    const newElement = this.getElement();\n\n    parent.replaceChild(newElement, oldElement);\n\n    this.recoveryListeners();\n  }\n}\n","import {extractDate} from '../utils/common';\nimport AbstractComponent from './abstract-component';\n\nconst createCommentTemplate = (comment) => {\n  const date = extractDate(comment.date);\n  const {year, month, day, hours, minutes} = date;\n  const fulldate = `${year}/${month}/${day} ${hours}:${minutes}`;\n  return (\n    `<li class=\"film-details__comment\">\n      <span class=\"film-details__comment-emoji\">\n        <img src=\"./images/emoji/${comment.emotion}.png\" width=\"55\" height=\"55\" alt=\"emoji-${comment.emotion}\">\n      </span>\n      <div>\n        <p class=\"film-details__comment-text\">${comment.text}</p>\n        <p class=\"film-details__comment-info\">\n          <span class=\"film-details__comment-author\">${comment.author}</span>\n          <span class=\"film-details__comment-day\">${fulldate}</span>\n          <button class=\"film-details__comment-delete\">Delete</button>\n        </p>\n      </div>\n    </li>`\n  );\n};\n\nexport default class Comment extends AbstractComponent {\n  constructor(comment) {\n    super();\n    this._comment = comment;\n  }\n\n  generateCommentsList() {\n    this._comment.sort((a, b) => {\n      return Date.parse(b.date) - Date.parse(a.date);\n    });\n\n    return this._comment.reduce((acc, item) => {\n      return acc + this.getTemplate(item);\n    }, ``);\n  }\n\n  getTemplate(comments) {\n    return createCommentTemplate(comments);\n  }\n}\n","import AbstractComponent from './abstract-component';\n\nconst createExtraFilmsListTemplate = (title) => {\n  return (\n    `<section class=\"films-list--extra\">\n      <h2 class=\"films-list__title\">${title}</h2>\n\n      <div class=\"films-list__container\"></div>\n    </section>`\n  );\n};\n\nexport default class ExtraFilmsList extends AbstractComponent {\n  constructor(title) {\n    super();\n    this._title = title;\n    this.filmsListContainer = this.getElement().querySelector(`.films-list__container`);\n  }\n\n  getTemplate() {\n    return createExtraFilmsListTemplate(this._title);\n  }\n}\n","import AbstractComponent from './abstract-component';\n\nconst createFilmCardTemplate = (card) => {\n  const {title, rating, duration, genre,\n    poster, description, comments, watchlist, watched, favorite} = card;\n  const {year} = card.date;\n  const isWatched = watched ? `film-card__controls-item--active` : ``;\n  const isWatchlist = watchlist ? `film-card__controls-item--active` : ``;\n  const isFavorite = favorite ? `film-card__controls-item--active` : ``;\n  return (\n    `<article class=\"film-card\">\n      <h3 class=\"film-card__title\">${title}</h3>\n      <p class=\"film-card__rating\">${rating}</p>\n      <p class=\"film-card__info\">\n        <span class=\"film-card__year\">${year}</span>\n        <span class=\"film-card__duration\">${duration}</span>\n        <span class=\"film-card__genre\">${genre.join(`, `)}</span>\n      </p>\n      <img src=\"./images/posters/${poster}.jpg\" alt=\"\" class=\"film-card__poster\">\n      <p class=\"film-card__description\">${description}</p>\n      <a class=\"film-card__comments\">${comments.length} comments</a>\n      <form class=\"film-card__controls\">\n        <button class=\"film-card__controls-item button ${isWatchlist} film-card__controls-item--add-to-watchlist\">Add to watchlist</button>\n        <button class=\"film-card__controls-item button ${isWatched} film-card__controls-item--mark-as-watched\">Mark as watched</button>\n        <button class=\"film-card__controls-item button ${isFavorite} film-card__controls-item--favorite\">Mark as favorite</button>\n      </form>\n    </article>`\n  );\n};\n\nexport default class FilmCard extends AbstractComponent {\n  constructor(card) {\n    super();\n    this._card = card;\n  }\n\n  getTemplate() {\n    return createFilmCardTemplate(this._card);\n  }\n\n  setTitleClickHandler(handler) {\n    this.getElement().querySelector(`.film-card__title`)\n      .addEventListener(`click`, handler);\n  }\n\n  setPosterClickHandler(handler) {\n    this.getElement().querySelector(`.film-card__poster`)\n      .addEventListener(`click`, handler);\n  }\n\n  setCommentsClickHandler(handler) {\n    this.getElement().querySelector(`.film-card__comments`)\n      .addEventListener(`click`, handler);\n  }\n\n  setAddToWatchlistClickHandler(handler) {\n    this.getElement().querySelector(`.film-card__controls-item--add-to-watchlist`)\n      .addEventListener(`click`, handler);\n  }\n\n  setAlreadyWatchedClickHandler(handler) {\n    this.getElement().querySelector(`.film-card__controls-item--mark-as-watched`)\n      .addEventListener(`click`, handler);\n  }\n\n  setAddToFavouriteClickHandler(handler) {\n    this.getElement().querySelector(`.film-card__controls-item--favorite`)\n      .addEventListener(`click`, handler);\n  }\n}\n","import Comment from \"./comment.js\";\nimport AbstractSmartComponent from \"./abstract-smart-component.js\";\n\nconst renderGenres = (genres) => {\n  return genres.map((item) => {\n    return `<span class=\"film-details__genre\">${item.trim()}</span>`;\n  }).join(``);\n};\n\nconst createFilmDetailsTemplate = (card, commetsList) => {\n  const {title, rating, duration, genre,\n    poster, ageRating, description, director, writers,\n    actors, comments, watchlist, watched, favorite} = card;\n  const {year, month, day} = card.date;\n  const fulldate = `${day} ${month} ${year}`;\n  const isWatched = watched ? `checked` : ``;\n  const isWatchlist = watchlist ? `checked` : ``;\n  const isFavorite = favorite ? `checked` : ``;\n  return (\n    `<section class=\"film-details\">\n      <form class=\"film-details__inner\" action=\"\" method=\"get\">\n        <div class=\"form-details__top-container\">\n          <div class=\"film-details__close\">\n            <button class=\"film-details__close-btn\" type=\"button\">close</button>\n          </div>\n          <div class=\"film-details__info-wrap\">\n            <div class=\"film-details__poster\">\n              <img class=\"film-details__poster-img\" src=\"./images/posters/${poster}.jpg\" alt=\"\">\n\n              <p class=\"film-details__age\">${ageRating}</p>\n            </div>\n\n            <div class=\"film-details__info\">\n              <div class=\"film-details__info-head\">\n                <div class=\"film-details__title-wrap\">\n                  <h3 class=\"film-details__title\">${title}</h3>\n                  <p class=\"film-details__title-original\">Original: ${title}</p>\n                </div>\n\n                <div class=\"film-details__rating\">\n                  <p class=\"film-details__total-rating\">${rating}</p>\n                </div>\n              </div>\n\n              <table class=\"film-details__table\">\n                <tr class=\"film-details__row\">\n                  <td class=\"film-details__term\">Director</td>\n                  <td class=\"film-details__cell\">${director}</td>\n                </tr>\n                <tr class=\"film-details__row\">\n                  <td class=\"film-details__term\">Writers</td>\n                  <td class=\"film-details__cell\">${writers.join(`, `)}</td>\n                </tr>\n                <tr class=\"film-details__row\">\n                  <td class=\"film-details__term\">Actors</td>\n                  <td class=\"film-details__cell\">${actors.join(`, `)}</td>\n                </tr>\n                <tr class=\"film-details__row\">\n                  <td class=\"film-details__term\">Release Date</td>\n                  <td class=\"film-details__cell\">${fulldate}</td>\n                </tr>\n                <tr class=\"film-details__row\">\n                  <td class=\"film-details__term\">Runtime</td>\n                  <td class=\"film-details__cell\">${duration}</td>\n                </tr>\n                <tr class=\"film-details__row\">\n                  <td class=\"film-details__term\">Country</td>\n                  <td class=\"film-details__cell\">USA</td>\n                </tr>\n                <tr class=\"film-details__row\">\n                  <td class=\"film-details__term\">Genres</td>\n                  <td class=\"film-details__cell\">${renderGenres(genre)}</td>\n                </tr>\n              </table>\n\n              <p class=\"film-details__film-description\">\n                ${description}\n              </p>\n            </div>\n          </div>\n\n          <section class=\"film-details__controls\">\n            <input type=\"checkbox\" class=\"film-details__control-input visually-hidden\" id=\"watchlist\" name=\"watchlist\" ${isWatchlist}>\n            <label for=\"watchlist\" class=\"film-details__control-label film-details__control-label--watchlist\">Add to watchlist</label>\n\n            <input type=\"checkbox\" class=\"film-details__control-input visually-hidden\" id=\"watched\" name=\"watched\" ${isWatched}>\n            <label for=\"watched\" class=\"film-details__control-label film-details__control-label--watched\">Already watched</label>\n\n            <input type=\"checkbox\" class=\"film-details__control-input visually-hidden\" id=\"favorite\" name=\"favorite\" ${isFavorite}>\n            <label for=\"favorite\" class=\"film-details__control-label film-details__control-label--favorite\">Add to favorites</label>\n          </section>\n        </div>\n\n        <div class=\"form-details__bottom-container\">\n          <section class=\"film-details__comments-wrap\">\n            <h3 class=\"film-details__comments-title\">Comments <span class=\"film-details__comments-count\">${comments.length}</span></h3>\n\n            <ul class=\"film-details__comments-list\">\n              ${commetsList}\n            </ul>\n\n            <div class=\"film-details__new-comment\">\n              <div for=\"add-emoji\" class=\"film-details__add-emoji-label\"></div>\n\n              <label class=\"film-details__comment-label\">\n                <textarea class=\"film-details__comment-input\" placeholder=\"Select reaction below and write comment here\" name=\"comment\"></textarea>\n              </label>\n\n              <div class=\"film-details__emoji-list\">\n                <input class=\"film-details__emoji-item visually-hidden\" name=\"comment-emoji\" type=\"radio\" id=\"emoji-smile\" value=\"smile\">\n                <label class=\"film-details__emoji-label\" for=\"emoji-smile\">\n                  <img src=\"./images/emoji/smile.png\" width=\"30\" height=\"30\" alt=\"emoji\">\n                </label>\n\n                <input class=\"film-details__emoji-item visually-hidden\" name=\"comment-emoji\" type=\"radio\" id=\"emoji-sleeping\" value=\"sleeping\">\n                <label class=\"film-details__emoji-label\" for=\"emoji-sleeping\">\n                  <img src=\"./images/emoji/sleeping.png\" width=\"30\" height=\"30\" alt=\"emoji\">\n                </label>\n\n                <input class=\"film-details__emoji-item visually-hidden\" name=\"comment-emoji\" type=\"radio\" id=\"emoji-puke\" value=\"puke\">\n                <label class=\"film-details__emoji-label\" for=\"emoji-puke\">\n                  <img src=\"./images/emoji/puke.png\" width=\"30\" height=\"30\" alt=\"emoji\">\n                </label>\n\n                <input class=\"film-details__emoji-item visually-hidden\" name=\"comment-emoji\" type=\"radio\" id=\"emoji-angry\" value=\"angry\">\n                <label class=\"film-details__emoji-label\" for=\"emoji-angry\">\n                  <img src=\"./images/emoji/angry.png\" width=\"30\" height=\"30\" alt=\"emoji\">\n                </label>\n              </div>\n            </div>\n          </section>\n        </div>\n      </form>\n    </section>`\n  );\n};\n\nexport default class FilmDetails extends AbstractSmartComponent {\n  constructor(film) {\n    super();\n    this._film = film;\n    this._closeBtnClickHandler = null;\n    this._addToWatchlistClickHandler = null;\n    this._alreadyWatchedClickHandler = null;\n    this._addToFavouriteClickHandler = null;\n  }\n\n  rerender() {\n    super.rerender();\n  }\n\n  getTemplate() {\n    const commetsList = new Comment(this._film.comments).generateCommentsList();\n    return createFilmDetailsTemplate(this._film, commetsList);\n  }\n\n  setCloseBtnClickHandler(handler) {\n    this.getElement().querySelector(`.film-details__close-btn`)\n      .addEventListener(`click`, handler);\n    this._closeBtnClickHandler = handler;\n  }\n\n  setAddToWatchlistClickHandler(handler) {\n    this.getElement().querySelector(`#watchlist`)\n      .addEventListener(`click`, handler);\n    this._addToWatchlistClickHandler = handler;\n  }\n\n  setAlreadyWatchedClickHandler(handler) {\n    this.getElement().querySelector(`#watched`)\n      .addEventListener(`click`, handler);\n    this._alreadyWatchedClickHandler = handler;\n  }\n\n  setAddToFavouriteClickHandler(handler) {\n    this.getElement().querySelector(`#favorite`)\n      .addEventListener(`click`, handler);\n    this._addToFavouriteClickHandler = handler;\n  }\n\n  recoveryListeners() {\n    this.setCloseBtnClickHandler(this._closeBtnClickHandler);\n    this.setAddToWatchlistClickHandler(this._addToWatchlistClickHandler);\n    this.setAlreadyWatchedClickHandler(this._alreadyWatchedClickHandler);\n    this.setAddToFavouriteClickHandler(this._addToFavouriteClickHandler);\n  }\n}\n","import AbstractComponent from './abstract-component';\n\nconst createFilmsListTemplate = () => {\n  return (\n    `<section class=\"films-list\">\n        <h2 class=\"films-list__title visually-hidden\">All movies. Upcoming</h2>\n\n        <div class=\"films-list__container\"></div>\n    </section>`\n  );\n};\n\nexport default class FilmsList extends AbstractComponent {\n  constructor() {\n    super();\n\n    this.filmsListElement = this.getElement().querySelector(`.films-list__container`);\n  }\n\n  getTemplate() {\n    return createFilmsListTemplate();\n  }\n}\n","import AbstractComponent from './abstract-component';\n\nconst createFilmsSectionTemplate = () => {\n  return (\n    `<section class=\"films\"></section>`\n  );\n};\n\nexport default class FilmsSection extends AbstractComponent {\n  getTemplate() {\n    return createFilmsSectionTemplate();\n  }\n}\n","import AbstractComponent from './abstract-component.js';\n\nconst createNoFilmsTemplate = () => {\n  return (\n    `<section class=\"films\">\n      <section class=\"films-list\">\n        <h2 class=\"films-list__title\">There are no movies in our database</h2>\n      </section>\n    </section>`\n  );\n};\n\nexport default class NoFilms extends AbstractComponent {\n  getTemplate() {\n    return createNoFilmsTemplate();\n  }\n}\n","import AbstractComponent from './abstract-component';\n\nconst createProfileTemplate = (count) => {\n  let profileRating = ``;\n  switch (true) {\n    case count >= 1 && count <= 10:\n      profileRating = `Novice`;\n      break;\n    case count >= 11 && count <= 20:\n      profileRating = `Fan`;\n      break;\n    case count >= 21:\n      profileRating = `Movie Buff`;\n      break;\n    default:\n      profileRating = ``;\n  }\n  return (\n    `<section class=\"header__profile profile\">\n      <p class=\"profile__rating\">${profileRating}</p>\n      <img class=\"profile__avatar\" src=\"images/bitmap@2x.png\" alt=\"Avatar\" width=\"35\" height=\"35\">\n    </section>`\n  );\n};\n\nexport default class Profile extends AbstractComponent {\n  constructor(count) {\n    super();\n    this._count = count;\n  }\n\n  getTemplate() {\n    return createProfileTemplate(this._count);\n  }\n}\n","import AbstractComponent from './abstract-component';\n\nconst createShowMoreButtonTemplate = () => {\n  return (\n    `<button class=\"films-list__show-more\">Show more</button>`\n  );\n};\n\nexport default class ShowMoreButton extends AbstractComponent {\n  getTemplate() {\n    return createShowMoreButtonTemplate();\n  }\n\n  setClickHandler(handler) {\n    this.getElement().addEventListener(`click`, handler);\n  }\n}\n","import AbstractComponent from './abstract-component';\n\nconst createSiteMenuTemplate = (cards) => {\n  const countWatchlist = cards.filter((card) => card.watchlist).length;\n  const countWatched = cards.filter((card) => card.watched).length;\n  const countFavorite = cards.filter((card) => card.favorite).length;\n\n  return (\n    `<nav class=\"main-navigation\">\n      <div class=\"main-navigation__items\">\n        <a href=\"#all\" class=\"main-navigation__item main-navigation__item--active\">All movies</a>\n        <a href=\"#watchlist\" class=\"main-navigation__item\">Watchlist <span class=\"main-navigation__item-count\">${countWatchlist}</span></a>\n        <a href=\"#history\" class=\"main-navigation__item\">History <span class=\"main-navigation__item-count\">${countWatched}</span></a>\n        <a href=\"#favorites\" class=\"main-navigation__item\">Favorites <span class=\"main-navigation__item-count\">${countFavorite}</span></a>\n      </div>\n      <a href=\"#stats\" class=\"main-navigation__additional\">Stats</a>\n    </nav>`\n  );\n};\n\nexport default class Menu extends AbstractComponent {\n  constructor(cards) {\n    super();\n    this._cards = cards;\n  }\n\n  getTemplate() {\n    return createSiteMenuTemplate(this._cards);\n  }\n}\n","import AbstractComponent from './abstract-component';\n\nexport const SortType = {\n  DATE: `date`,\n  RATING: `rating`,\n  DEFAULT: `default`,\n};\n\nconst createCustomSortTemplate = () => {\n  return (\n    `<ul class=\"sort\">\n      <li><a href=\"#\" data-sort-type=\"${SortType.DEFAULT}\" class=\"sort__button sort__button--active\">Sort by default</a></li>\n      <li><a href=\"#\" data-sort-type=\"${SortType.DATE}\" class=\"sort__button\">Sort by date</a></li>\n      <li><a href=\"#\" data-sort-type=\"${SortType.RATING}\" class=\"sort__button\">Sort by rating</a></li>\n    </ul>`\n  );\n};\n\nexport default class Sort extends AbstractComponent {\n  constructor() {\n    super();\n    this._currenSortType = SortType.DEFAULT;\n  }\n\n  getTemplate() {\n    return createCustomSortTemplate();\n  }\n\n  getSortType() {\n    return this._currenSortType;\n  }\n\n  setSortTypeChangeHandler(handler) {\n    this.getElement().addEventListener(`click`, (evt) => {\n      evt.preventDefault();\n      if (evt.target.tagName !== `A`) {\n        return;\n      }\n\n      const sortType = evt.target.dataset.sortType;\n\n      if (this._currenSortType === sortType) {\n        return;\n      }\n\n      this._currenSortType = sortType;\n\n      handler(this._currenSortType);\n    });\n  }\n}\n","import AbstractComponent from './abstract-component';\n\nconst createStatisticsTemplate = (films) => {\n  const statistics = films.length;\n\n  return (\n    `<p>${statistics} movies inside</p>`\n  );\n};\n\nexport default class Statistics extends AbstractComponent {\n  constructor(films) {\n    super();\n    this._films = films;\n  }\n\n  getTemplate() {\n    return createStatisticsTemplate(this._films);\n  }\n}\n","import {render, replace, remove, RenderPosition} from '../utils/render';\nimport FilmCardComponent from '../components/film-card';\nimport FilmDetailsComponent from '../components/film-details';\nimport {ESC_KEY_CODE} from '../utils/const';\n\nexport const Mode = {\n  DEFAULT: `default`,\n  DETAILS: `details`,\n};\n\nexport default class MovieController {\n  constructor(container, onDataChange, onViewChange) {\n    this._container = container;\n    this._filmCardComponent = null;\n    this._filmDetailsComponent = null;\n    this._onDataChange = onDataChange;\n    this._onViewChange = onViewChange;\n    this._mode = Mode.DEFAULT;\n\n    this._onEscPress = this._onEscPress.bind(this);\n  }\n\n  render(film) {\n    const oldFilmCardComponent = this._filmCardComponent;\n    const oldFilmDetailsComponent = this._filmDetailsComponent;\n\n    this._filmCardComponent = new FilmCardComponent(film);\n    this._filmDetailsComponent = new FilmDetailsComponent(film);\n\n    this._filmCardComponent.setTitleClickHandler(() => this._openFilmDetails());\n    this._filmCardComponent.setPosterClickHandler(() => this._openFilmDetails());\n    this._filmCardComponent.setCommentsClickHandler(() => this._openFilmDetails());\n    this._filmDetailsComponent.setCloseBtnClickHandler(() => {\n      this._closeFilmDetails();\n    });\n\n    this._filmCardComponent.setAddToWatchlistClickHandler(() => {\n      this._onDataChange(this, film, Object.assign({}, film, {\n        watchlist: !film.watchlist\n      }));\n    });\n\n    this._filmCardComponent.setAlreadyWatchedClickHandler(() => {\n      this._onDataChange(this, film, Object.assign({}, film, {\n        watched: !film.watched\n      }));\n    });\n\n    this._filmCardComponent.setAddToFavouriteClickHandler(() => {\n      this._onDataChange(this, film, Object.assign({}, film, {\n        favorite: !film.favorite\n      }));\n    });\n\n    this._filmDetailsComponent.setAddToWatchlistClickHandler(() => {\n      remove(this._filmDetailsComponent);\n      this._onDataChange(this, film, Object.assign({}, film, {\n        watchlist: !film.watchlist\n      }));\n    });\n\n    this._filmDetailsComponent.setAlreadyWatchedClickHandler(() => {\n      remove(this._filmDetailsComponent);\n      this._onDataChange(this, film, Object.assign({}, film, {\n        watched: !film.watched\n      }));\n    });\n\n    this._filmDetailsComponent.setAddToFavouriteClickHandler(() => {\n      remove(this._filmDetailsComponent);\n      this._onDataChange(this, film, Object.assign({}, film, {\n        favorite: !film.favorite\n      }));\n    });\n\n    if (oldFilmCardComponent && oldFilmDetailsComponent) {\n      replace(this._filmCardComponent, oldFilmCardComponent);\n      replace(this._filmDetailsComponent, oldFilmDetailsComponent);\n    } else {\n      render(this._container, this._filmCardComponent, RenderPosition.BEFOREEND);\n    }\n  }\n\n  setDefaultView() {\n    if (this._mode !== Mode.DEFAULT) {\n      this._closeFilmDetails();\n    }\n  }\n\n  _openFilmDetails() {\n    this._onViewChange();\n    document.body.appendChild(this._filmDetailsComponent.getElement());\n    this._mode = Mode.DETAILS;\n    this._filmDetailsComponent.recoveryListeners();\n    document.addEventListener(`keydown`, this._onEscPress);\n  }\n\n  _closeFilmDetails() {\n    document.removeEventListener(`keydown`, this._onEscPress);\n    remove(this._filmDetailsComponent);\n    this._mode = Mode.DEFAULT;\n  }\n\n  _onEscPress(evt) {\n    if (evt.keyCode === ESC_KEY_CODE) {\n      this._closeFilmDetails();\n    }\n  }\n}\n","import FilmsListComponent from '../components/films-list';\nimport SortComponent, {SortType} from '../components/sort';\nimport ExtraFilmsListComponent from '../components/extra-films-list';\nimport ShowMoreButtonComponent from '../components/show-more-button';\nimport NoFilmsComponent from '../components/no-films';\nimport {sortTopRatedFilms, sortMostCommentedFilms, sortFilmsByDate} from '../utils/common';\nimport {render, RenderPosition, remove} from '../utils/render';\nimport {FILMS_ON_START, EXTRA_FILMS, SHOW_FILMS_BY_BTN} from '../utils/const';\nimport MovieController from './movie-controller';\n\nconst Sections = {\n  RATING: `Top Rated`,\n  COMMENTS: `Most commented`\n};\n\nconst renderFilmCards = (filmListElement, films, count, onDataChange, onViewChange) => {\n  const movieControllers = [];\n  for (let i = 0; i < count; i++) {\n    const movieController = new MovieController(filmListElement, onDataChange, onViewChange);\n    movieController.render(films[i]);\n    movieControllers.push(movieController);\n  }\n  return movieControllers;\n};\n\nconst getSortedCards = (cards, sortType) => {\n  let sortedCards = [];\n  const showingCards = cards.slice();\n\n  switch (sortType) {\n    case SortType.DATE:\n      sortedCards = sortFilmsByDate(cards);\n      break;\n    case SortType.RATING:\n      sortedCards = sortTopRatedFilms(cards);\n      break;\n    case SortType.DEFAULT:\n      sortedCards = showingCards;\n      break;\n  }\n\n  return sortedCards;\n};\n\nexport default class PageController {\n  constructor(container) {\n    this._container = container;\n    this._films = [];\n    this._movieControllers = [];\n    this._filmsListComponent = new FilmsListComponent();\n    this._sortComponent = new SortComponent();\n    this._showMoreButtonComponent = new ShowMoreButtonComponent();\n    this._noFilmsComponent = new NoFilmsComponent();\n\n    this._filmsListComponent = new FilmsListComponent();\n    this._filmsList = this._filmsListComponent.getElement();\n    this._filmsListContainer = this._filmsListComponent.filmsListElement;\n\n    this._filmsListTopRatedComponent = new ExtraFilmsListComponent(Sections.RATING);\n    this._filmsListMostCommentedComponent = new ExtraFilmsListComponent(Sections.COMMENTS);\n\n    this._onDataChange = this._onDataChange.bind(this);\n    this._onViewChange = this._onViewChange.bind(this);\n  }\n\n  render(films) {\n    this._films = films;\n    const topRatedFilms = sortTopRatedFilms(this._films);\n    const mostCommentedFilms = sortMostCommentedFilms(this._films);\n\n    render(this._container, this._sortComponent, RenderPosition.BEFOREEND);\n    render(this._container, this._filmsListComponent, RenderPosition.BEFOREEND);\n\n    if (this._films.length) {\n      const newCards = renderFilmCards(this._filmsListContainer, this._films, FILMS_ON_START, this._onDataChange, this._onViewChange);\n      this._movieControllers = this._movieControllers.concat(newCards);\n      this._renderShowMoreButton();\n\n      if (topRatedFilms) {\n        render(this._container, this._filmsListTopRatedComponent, RenderPosition.BEFOREEND);\n        renderFilmCards(this._filmsListTopRatedComponent.filmsListContainer, topRatedFilms, EXTRA_FILMS, this._onDataChange, this._onViewChange);\n      }\n      if (mostCommentedFilms) {\n        render(this._container, this._filmsListMostCommentedComponent, RenderPosition.BEFOREEND);\n        renderFilmCards(this._filmsListMostCommentedComponent.filmsListContainer, mostCommentedFilms, EXTRA_FILMS, this._onDataChange, this._onViewChange);\n      }\n\n      this._sortComponent.setSortTypeChangeHandler((sortType) => {\n        const sortedCards = getSortedCards(this._films, sortType);\n        this._filmsListComponent.getElement().querySelector(`.films-list__container`).innerHTML = ``;\n        renderFilmCards(this._filmsListContainer, sortedCards, FILMS_ON_START, this._onDataChange, this._onViewChange);\n        this._renderShowMoreButton();\n      });\n    } else {\n      render(this._container, this._noFilmsComponent, RenderPosition.BEFOREEND);\n    }\n  }\n\n  _renderShowMoreButton() {\n    render(this._filmsList, this._showMoreButtonComponent, RenderPosition.BEFOREEND);\n    let countFilms = FILMS_ON_START;\n    this._showMoreButtonComponent.setClickHandler(() => {\n      const from = countFilms;\n      countFilms += SHOW_FILMS_BY_BTN;\n\n      const nextFilms = this._films.slice(from, countFilms);\n\n      if (nextFilms.length < SHOW_FILMS_BY_BTN) {\n        remove(this._showMoreButtonComponent);\n      }\n\n      const newCards = renderFilmCards(this._filmsListContainer, nextFilms, nextFilms.length, this._onDataChange, this._onViewChange);\n      this._movieControllers = this._movieControllers.concat(newCards);\n      // const movieControllers = [];\n      // for (let i = 0; i < nextFilms.length; i++) {\n      //   const movieController = new MovieController(this._filmsListContainer, this._onDataChange, this._onViewChange);\n      //   movieController.render(nextFilms[i]);\n      //   movieControllers.push(movieController);\n      // }\n      // this._movieControllers = this._movieControllers.concat(movieControllers);\n    });\n  }\n\n  _onDataChange(movieController, oldData, newData) {\n    const index = this._films.findIndex((it) => it === oldData);\n\n    if (index === -1) {\n      return;\n    }\n\n    this._films = [].concat(this._films.slice(0, index), newData, this._films.slice(index + 1));\n    movieController.render(this._films[index]);\n  }\n\n  _onViewChange() {\n    this._movieControllers.forEach((it) => it.setDefaultView());\n  }\n}\n","import ProfileComponent from './components/profile';\nimport MenuComponent from './components/site-menu';\nimport StatisticsComponent from './components/statistics';\nimport FilmsSectionComponent from './components/films-section';\nimport PageController from './controllers/page-controller';\nimport {generateFilmCards} from './mock/film-card';\nimport {getRandomIntegerNumber} from './utils/common';\nimport {render, RenderPosition} from './utils/render';\nimport {ALL_FILMS} from './utils/const';\n\nconst allFilms = generateFilmCards(ALL_FILMS);\n\nconst mainElement = document.querySelector(`.main`);\nconst headerElement = document.querySelector(`.header`);\nconst filmSection = new FilmsSectionComponent();\nconst footerStatisticsSection = document.querySelector(`.footer__statistics`);\nconst profileRating = getRandomIntegerNumber(0, 30);\nconst pageController = new PageController(filmSection.getElement());\n\nrender(headerElement, new ProfileComponent(profileRating), RenderPosition.BEFOREEND);\nrender(mainElement, new MenuComponent(allFilms), RenderPosition.BEFOREEND);\nrender(mainElement, filmSection, RenderPosition.BEFOREEND);\npageController.render(allFilms);\nrender(footerStatisticsSection, new StatisticsComponent(allFilms), RenderPosition.BEFOREEND);\n\n","import {getRandomIntegerNumber, getRandomFloatNumber, getRandomArrayItem,\n  getRandomCollection, getRandomDate, getReleaseDate} from '../utils/common';\nimport {MAX_COUNT_COMMENTS} from \"../utils/const.js\";\n\nconst genres = [`drama`, `thriller`, `comedy`, `sci-fi`, `action`, `melodrama`, `biography`, `fantasy`, `criminal`];\n\nconst titles = [`Shawshank redemption`, `Green mile`, `Forrest Gump`, `Shindler's list`, `Intouchtables`,\n  `Inception`, `Leon`, `Lion King`, `Fight Club`, `La vita e bella`, `Knockin' on heaven's door`,\n  `Godfather`, `Pulp fiction`, `Prestige`, `A beautiful mind`, `Interstellar`];\n\nconst directors = [`Frank Darabont`, `Robert Zemeckis`, `Quentin Tarantino`, `Steven Spielberg`,\n  `Christopher Nolan`, `Francis Ford Coppola`, `David Fincher`, `Stanley Kubrick`];\n\nconst writers = [`Billy Wilder`, `Quentin Tarantino`, `Francis Ford Coppola`, `Ethan and Joel Coen`, `Robert Towne`, `Woody Allen`];\n\nconst actors = [`Leonardo DiCaprio`, `Christian Bale`, `Daniel Day-Lewis`, `James McAvoy`,\n  `Matthew McConaughey`, `Samuel L. Jackson`, `Brad Pitt`, `Jessica Chastain`, `Monica Bellucci`,\n  `Charlize Theron`, `Amy Adams`, `Emily Blunt`, `Uma Thurman`];\n\nconst ageRating = [`0+`, `6+`, `12+`, `14+`, `18+`];\n\nconst authors = [`Ivan`, `Alex`, `Max`, `Anna`, `Nataly`];\n\nconst emotions = [`smile`, `sleeping`, `puke`, `angry`];\n\nlet text = `Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras aliquet varius magna, non porta ligula\nfeugiat eget. Fusce tristique felis at fermentum pharetra. Aliquam id orci ut lectus varius viverra. Nullam\nnunc ex, convallis sed finibus eget, sollicitudin eget ante. Phasellus eros mauris, condimentum sed nibh\nvitae, sodales efficitur ipsum. Sed blandit, eros vel aliquam faucibus, purus ex euismod diam, eu luctus\nnunc ante ut dui. Sed sed nisi sed augue convallis suscipit in sed felis. Aliquam erat volutpat. Nunc\nfermentum tortor ac porta dapibus. In rutrum ac purus sit amet tempus.`;\nconst textArr = text.split(`.`);\n\nconst posters = [`made-for-each-other`, `popeye-meets-sinbad`, `sagebrush-trail`,\n  `santa-claus-conquers-the-martians`, `the-dance-of-life`, `the-great-flamarion`,\n  `the-man-with-the-golden-arm`];\n\nconst getDescription = () => {\n  const len = getRandomIntegerNumber(1, 3);\n  let description = [];\n  for (let i = 0; i < len; i++) {\n    description.push(getRandomArrayItem(textArr));\n  }\n  return description.join(`.`);\n};\n\nconst getDuration = () => {\n  let hours = getRandomIntegerNumber(1, 3);\n  let minutes = getRandomIntegerNumber(0, 60);\n  return `${hours}h ${minutes}m`;\n};\n\nconst generateComment = () => {\n  return {\n    author: getRandomArrayItem(authors),\n    text: getDescription(),\n    date: getRandomDate(),\n    emotion: getRandomArrayItem(emotions)\n  };\n};\n\nconst generateComments = (count) => {\n  const randomCountComments = getRandomIntegerNumber(0, count);\n\n  return new Array(randomCountComments).fill(``).map(generateComment);\n};\n\nexport const generateFilmCard = () => {\n  return {\n    title: getRandomArrayItem(titles),\n    rating: getRandomFloatNumber(7, 10),\n    date: getReleaseDate(),\n    duration: getDuration(),\n    genre: getRandomCollection(genres, 1, 3),\n    poster: getRandomArrayItem(posters),\n    ageRating: getRandomArrayItem(ageRating),\n    description: getDescription(),\n    director: getRandomArrayItem(directors),\n    writers: getRandomCollection(writers, 1, 2),\n    actors: getRandomCollection(actors, 1, 5),\n    comments: generateComments(MAX_COUNT_COMMENTS),\n    watchlist: Math.random() > 0.5,\n    watched: Math.random() > 0.5,\n    favorite: Math.random() > 0.5,\n  };\n};\n\nexport const generateFilmCards = (count) => {\n  return new Array(count)\n    .fill(``)\n    .map(generateFilmCard);\n};\n","import {MONTHS} from './const';\n\nexport const getRandomArrayItem = (array) => {\n  const randomIndex = getRandomIntegerNumber(0, array.length);\n  return array[randomIndex];\n};\n\nexport const getRandomIntegerNumber = (min, max) => {\n  return min + Math.floor(Math.random() * (max - min));\n};\n\nexport const getRandomFloatNumber = (min, max, digits = 1) => {\n  return parseFloat((getRandomIntegerNumber(min, max) + Math.random()).toFixed(digits));\n};\n\nexport const getRandomCollection = (array, min, max) => {\n  const maxLen = getRandomIntegerNumber(min, max);\n  const uniqueValue = new Set();\n\n  for (let i = 0; i < maxLen; i++) {\n    uniqueValue.add(array[Math.floor(Math.random() * array.length)] + ` `);\n  }\n\n  return Array.from(uniqueValue);\n};\n\nexport const getReleaseDate = () => {\n  const month = getRandomIntegerNumber(0, 11);\n  const day = (month === 1) ? getRandomIntegerNumber(1, 29) : getRandomIntegerNumber(1, 30);\n  return {\n    year: getRandomIntegerNumber(1950, 2018),\n    month: MONTHS[month],\n    day\n  };\n};\n\nexport const getRandomDate = () => {\n  const now = Date.now();\n  const rand = getRandomIntegerNumber(0, 100000000);\n  return (new Date(now - rand)).toISOString();\n};\n\nexport const extractDate = (str) => {\n  let ms = Date.parse(str);\n  let date = new Date(ms);\n\n  return {\n    year: date.getFullYear(),\n    month: MONTHS[date.getMonth()],\n    day: date.getDate(),\n    hours: date.getHours(),\n    minutes: date.getMinutes(),\n  };\n};\n\nexport const sortTopRatedFilms = (films) => {\n  const clone = films.slice();\n\n  const isRated = films.some((film) => film.rating);\n\n  if (!isRated) {\n    return ``;\n  }\n\n  return clone.sort((a, b) => {\n    return Number(b.rating) - Number(a.rating);\n  });\n};\n\nexport const sortMostCommentedFilms = (films) => {\n  const clone = films.slice();\n\n  const isCommented = films.some((film) => {\n    return film.comments.length;\n  });\n\n  if (!isCommented) {\n    return ``;\n  }\n\n  return clone.sort((a, b) => {\n    return Number(b.comments.length) - Number(a.comments.length);\n  });\n};\n\nexport const sortFilmsByDate = (films) => {\n  const clone = films.slice();\n\n  return clone.sort((a, b) => {\n    const dateA = new Date(a.date.year, MONTHS.indexOf(a.date.month), a.date.day);\n    const dateB = new Date(b.date.year, MONTHS.indexOf(b.date.month), b.date.day);\n    return dateA - dateB; // сортировка по возрастающей дате\n  });\n};\n\n","export const FILMS_ON_START = 5;\nexport const ALL_FILMS = 14;\nexport const EXTRA_FILMS = 2;\nexport const SHOW_FILMS_BY_BTN = 5;\n\nexport const MAX_COUNT_COMMENTS = 10;\n\nexport const MONTHS = [`January`, `February`, `March`, `April`, `May`, `June`, `July`, `August`, `September`, `October`, `November`, `December`];\n\nexport const ESC_KEY_CODE = 27;\n","export const RenderPosition = {\n  AFTERBEGIN: `afterbegin`,\n  BEFOREEND: `beforeend`\n};\n\nexport const createElement = (htmlText) => {\n  const newElement = document.createElement(`div`);\n  newElement.innerHTML = htmlText;\n\n  return newElement.firstChild;\n};\n\nexport const render = (container, component, position) => {\n  switch (position) {\n    case RenderPosition.AFTERBEGIN:\n      container.prepend(component.getElement());\n      break;\n    case RenderPosition.BEFOREEND:\n      container.append(component.getElement());\n      break;\n  }\n};\n\nexport const replace = (newComponent, oldComponent) => {\n  const parentElement = oldComponent.getElement().parentElement;\n  const newElement = newComponent.getElement();\n  const oldElement = oldComponent.getElement();\n\n  const isExistElements = !!(parentElement && newElement && oldElement);\n\n  if (isExistElements && parentElement.contains(oldElement)) {\n    parentElement.replaceChild(newElement, oldElement);\n  }\n};\n\nexport const remove = (component) => {\n  component.getElement().remove();\n  component.removeElement();\n};\n"],"sourceRoot":""}